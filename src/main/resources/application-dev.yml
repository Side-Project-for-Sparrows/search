spring:
  datasource:
    url: jdbc:postgresql://192.168.0.17:30000/mydb
    username: myuser
    password: mypw
    driver-class-name: org.postgresql.Driver
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        format_sql: true
  data:
    mongodb:
      uri: mongodb://admin:password@192.168.0.17:30017/admin
    redis:
      host: 192.168.0.17
      port: 30079
    elasticsearch:
      uri: 192.168.0.17:30920
  task:
    scheduling:
      pool:
        size: 5
  batch:
    jdbc:
      initialize-schema: always  # 배치 메타 테이블 자동 생성
    job:
      enabled: false
  kafka:
    bootstrap-servers: 192.168.0.17:30092
    admin:
      auto-create: true
    consumer:
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
    #producer:
      #transactional-id-prefix: tx-mono- #트랜잭션 ID prefix
#    consumer:
#      enable-auto-commit: false  # 오토 커밋 금지
#      auto-offset-reset: earliest
#    listener:
#      ack-mode: MANUAL  # 수동 ack

neis:
  url: https://open.neis.go.kr/hub/schoolInfo
  api-key: fb9d21c2f3b842bcbff0503e1ebeea63

APP:
  API-KEY: 7f0c6616ae9d4eff4f6a9d3cc4c473bc

TIMEZONE:
  OFFSET: 9

search:
  service:
    url: localhost:8080

kafka:
  aggregateType:
    user: "user"
    post: "post"
    board: "board"
    school: "school"

  topic:
    user:
      create: "user-create-event"
      update: "user-update-event"
      delete: "user-delete-event"
    post:
      create: "post-create-event"
      update: "post-update-event"
      delete: "post-delete-event"
    board:
      create: "board-create-event"
      update: "board-update-event"
      delete: "board-delete-event"
    school:
      create: "school-create-event"
      update: "school-update-event"
      delete: "school-delete-event"

  groupId:
    board: "board-group-kwan"
    school: "school-group-kwan"
    search: "search-group-kwan"

logging:
  level:
    org.apache.kafka: WARN
    org.apache.kafka.clients.consumer: WARN
    org.apache.kafka.clients.producer: WARN
    org.springframework.kafka: WARN

cache:
  ttl:
    default-ttl: 5m
    domain:
      calendar:
        in-memory: 1m
        redis: 2m